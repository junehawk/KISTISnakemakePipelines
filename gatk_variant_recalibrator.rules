#specifying rule order for remove ambiguity between freebayes_merge and gatk_apply_variant_recalibration
#ruleorder: gatk_apply_variant_recalibration > freebayes_merge

#get path to reference genome file with name of 'ref'
def _get_ref(wildcards):
    return config["references"][wildcards.ref]

#make specified 'flag' seperated list of files
def _gatk_snp_indel_arg(files):
    return "--variant:v1 " + files[0] + " --variant:v2 " + files[1]

#get recalibration parameters according to the variant type
def _get_recal_params(wildcards):
    if wildcards.type == "snp":
        return (
            "-mode SNP -an DP -an QD -an FS -an MQRankSum -an ReadPosRankSum "
            "-resource:hapmap,known=false,training=true,truth=true,prior=15.0 {hapmap} "
            "-resource:omni,known=false,training=true,truth=true,prior=12.0 {omni} "
            "-resource:1000G,known=false,training=true,truth=false,prior=10.0 {g1k} "
            "-resource:dbsnp,known=true,training=false,truth=false,prior=2.0 {dbsnp}"
        ).format(**config["known_variants"])
    else:
        return (
            "-mode INDEL -an DP -an FS -an MQRankSum -an ReadPosRankSum "
            "-resource:mills,known=true,training=true,truth=true,prior=12.0 {mills}"
        ).format(**config["known_variants"])

#perform variant recalibration step
rule gatk_variant_recalibration:
    input:
        config["known_variants"].values(),
        reference=_get_ref,
        vcf="variant_calling/{ref}/{alg}/{caller}/{prefix}.vcf.gz",
        tabix="variant_calling/{ref}/{alg}/{caller}/{prefix}.vcf.gz.tbi"
    output:
        recal=temp("variant_calling/{ref}/{alg}/{caller}/{prefix}.{type,(snp|indel)}.recal"),
        tranches=temp("variant_calling/{ref}/{alg}/{caller}/{prefix}.{type,(snp|indel)}.tranches"),
        plotting=temp("variant_calling/{ref}/{alg}/{caller}/{prefix}.{type,(snp|indel)}.plotting.R")
    params:
        _get_recal_params,
        config.get("params_gatk_var_recal", "")
    #log:
    #    "variant_calling/log/{ref}/{alg}/{prefix}.{type}_recalibrate_info.log"
    threads: 8
    shell:
        "java -XX:+UseConcMarkSweepGC -XX:ParallelGCThreads=4 -Xmx16g -jar "
        "{config[tools][gatk]} "
        "-T VariantRecalibrator -R {input.reference} "
        "-input {input.vcf} "
        "{params} -nt {threads} "
        "-tranche 100.0 -tranche 99.9 -tranche 99.0 -tranche 90.0 "
        "--disable_auto_index_creation_and_locking_when_reading_rods "
        "-recalFile {output.recal} "
        "-tranchesFile {output.tranches} "
        "-rscriptFile {output.plotting}"

#Apply variant recalibration result to the vcf file
rule gatk_apply_variant_recalibration:
    input:
        reference=_get_ref,
        vcf="variant_calling/{ref}/{alg}/{caller}/{prefix}.vcf.gz",
        recal="variant_calling/{ref}/{alg}/{caller}/{prefix}.{type}.recal",
        tranches="variant_calling/{ref}/{alg}/{caller}/{prefix}.{type}.tranches"
    output:
        "variant_calling/{ref}/{alg}/{caller}/{prefix}.{type,(snp|indel)}_recalibrated.vcf.gz"
    params:
        mode=lambda wildcards: wildcards.type.upper(),
        custom=config.get("params_gatk_var_recal", "")
    #log:
        #"variant_calling/log/{ref}/{alg}/{prefix}.{type}_recalibrate.log"
    threads: 8
    shell:
        "java -XX:+UseConcMarkSweepGC -XX:ParallelGCThreads=4 -Xmx16g -jar "
        "{config[tools][gatk]} "
        "-T ApplyRecalibration -R {input.reference} -nt {threads} "
        "-input {input.vcf} -mode {params.mode} {params.custom} "
        "-recalFile {input.recal} --ts_filter_level 99.9 "
        "-tranchesFile {input.tranches} -o {output}"

rule gatk_combine_variants:
    input:
        vcfs=["variant_calling/{ref}/{alg}/{caller}/{prefix}.snp_recalibrated.vcf.gz", "variant_calling/{ref}/{alg}/{caller}/{prefix}.indel_recalibrated.vcf.gz"],
        reference=_get_ref
    output:
        "variant_calling/{ref}/{alg}/{caller}/{prefix}.recalibrated_final.vcf.gz"
    threads: 4
    run: 
        variants=_gatk_snp_indel_arg(input.vcfs)
        shell(
            "java -XX:+UseConcMarkSweepGC -XX:ParallelGCThreads=4 -Xmx16g -jar "
            "{config[tools][gatk]} "
            "-T CombineVariants -R {input.reference} -nt {threads} "
            "--out {output} {variants} "
            "--rod_priority_list v1,v2 --genotypemergeoption PRIORITIZE"
        )
