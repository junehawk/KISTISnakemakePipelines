#get path to reference genome file with name of 'ref'
def _get_ref(wildcards):
    return config["references"][wildcards.ref]

def _get_ethnicity(wildcards):
    try:
        eth = config["ethnicity"]
        return "--ethnicity " + eth
    except:
        return "--ethnicity ASN"
#run decanter for QC
rule decanter:
    input:
        reference=_get_ref,
        bam="mapping/{ref}/{alg}/{project}-{disease}-{participant,\d+}-{case}-{method}-{platform}.{processed}.bam",
        bai="mapping/{ref}/{alg}/{project}-{disease}-{participant,\d+}-{case}-{method}-{platform}.{processed}.bam.bai"
    output:
        "qc/{ref}/{alg}/decanter/{project}-{disease}-{participant,\d+}-{case}-{method}-{platform}.{processed}.bam.decanter.report.txt"
        #"qc/{ref}/{alg}/decanter/{project}-{disease}-{participant,\d+}-{case}-{method}-{platform}.{processed}.bam.decanter.pdf"
    threads: 8
    priority: 2
    params:
        prefix="qc/{ref}/{alg}/decanter/{project}-{disease}-{participant,\d+}-{case}-{method}-{platform}.{processed}.bam.decanter",
        ethnicity=_get_ethnicity
    shell:
        #"conda deactivate && "
        #"source /cluster/ngs/utils/miniconda/bin/activate root && "
        "export PATH=/cluster/ngs/samtools-1.3:/cluster/ngs/bcftools-1.3:$PATH && "
        "/usr/bin/python {config[tools][decanter]} "
        "-S {config[tools][samtools]} "
        "-B {config[tools][bcftools]} "
        "-R {input.reference} "
        "-D /cluster/ngs/sambamba/sambamba_v0.6.4 "
        "-b {input.bam} "
        "-o {params.prefix} "
        "{params.ethnicity}"
